---
# tasks file for firewall_proxmox

## Obtener el ID del host
- name: Get the host ID
  ansible.builtin.shell: |
    set -o pipefail
    { pct list & qm list; } | grep -w {{ pve_hostname }} | awk '{ print $1 }'
  args:
    executable: /bin/bash
  delegate_to: "{{ pve_api_host }}"
  register: VMID
  changed_when: false

## Asegurar existencia del directorio de configuración de firewall para el CLUSTER
- name: Ensure the existence of the firewall configuration directory for the CLUSTER
  ansible.builtin.file:
    path: "/etc/pve/firewall"
    state: directory
    owner: root
    group: www-data
    mode: "0640"
  delegate_to: "{{ pve_api_host }}"

## Asegurar existencia del archivo de configuración de firewall para el CLUSTER
- name: Ensure the existence of the firewall configuration file for the CLUSTER
  ansible.builtin.file:
    path: "/etc/pve/firewall/cluster.fw"
    state: touch
    owner: root
    group: www-data
    mode: "0640"
    modification_time: preserve
    access_time: preserve
  delegate_to: "{{ pve_api_host }}"
  when: pve_firewall_configure_cluster | bool

## Copiar archivo de configuración de firewall para el CLUSTER (Llamado "Datacenter" en panel web de Proxmox)
- name: Copy firewall configuration file for the CLUSTER (Called "Datacenter" in Proxmox web panel)
  ansible.builtin.copy:
    src: "{{ pve_firewall_configuration_files }}/cluster.fw"
    dest: "/etc/pve/firewall/cluster.fw"
    owner: root
    group: www-data
    mode: "0640"
  notify:
    - reload pve-firewall
  delegate_to: "{{ pve_api_host }}"
  when: pve_firewall_configure_cluster | bool

## Comprobar si existe un archivo de firewall definido para el contenedor/VM en nuestro proyecto
- name: Check if there is a firewall file defined for the container/VM in our project
  ansible.builtin.stat:
    path: "{{ pve_firewall_path_to_host_configuration_file }}"
  become: no
  delegate_to: localhost
  register: host_firewall_configuration_file

## Asegurar existencia del archivo de configuración de firewall para el contenedor/VM
- name: Ensure existence of the firewall configuration file for the container/VM
  ansible.builtin.file:
    path: "/etc/pve/firewall/{{ VMID.stdout }}.fw"
    state: touch
    owner: root
    group: www-data
    mode: "0640"
    modification_time: preserve
    access_time: preserve
  delegate_to: "{{ pve_api_host }}"

## Copiar archivo de configuración de firewall para el contenedor/VM si está definido
- name: Copy firewall configuration file for the container/VM if it is defined
  ansible.builtin.copy:
    src: "{{ pve_firewall_host_configuration_file }}"
    dest: "/etc/pve/firewall/{{ VMID.stdout }}.fw"
    owner: root
    group: www-data
    mode: "0640"
  notify:
    - reload pve-firewall
  delegate_to: "{{ pve_api_host }}"
  when: host_firewall_configuration_file.stat.exists

## Copiar archivo por defecto de firewall para el contenedor/VM sin definición
- name: Copy default firewall file for the container/VM without definition
  ansible.builtin.copy:
    src: "{{ pve_firewall_configuration_files }}/default.fw"
    dest: "/etc/pve/firewall/{{ VMID.stdout }}.fw"
    owner: root
    group: www-data
    mode: "0640"
  notify:
    - reload pve-firewall
  delegate_to: "{{ pve_api_host }}"
  when: (not host_firewall_configuration_file.stat.exists)

...
